add2 <- function(x,y) {
x +y
}
add2(2,3)
aboveC <- function(x, c) {
use <- x > c
x[use]
}
x <- 1:20
aboveC(x,12)
aboveC <- function(x, c=10) {
use <- x > c
x[use]
}
aboveC(x)
aboveC(x, 12
)
source('~/.active-rstudio-document')
columnmean(airquality)
source('~/.active-rstudio-document')
columnmean(airquality)
source('~/.active-rstudio-document')
myplot(1,2)
source('~/Desktop/coursera2/first_functions.R')
myplot(1,2)
source('~/Desktop/coursera2/polmean_NO_IF.R')
source('~/.active-rstudio-document')
pollutantmean(specdata, nitrate, 1)
pollutantmean("specdata", "nitrate", 1)
source('~/Desktop/coursera2/polmean_NO_IF.R')
library(ggplot2)
?qplot
source('~/simulation_1.R')
simulation_1)
simulation_1()
source('~/simulation_1.R')
qplot(coverage)
qplot(x = coverage)
plot(coverage, type = "l")
histogram(coverage, type = "l")
hist(coverage, type = "l")
qplot(x = pvals, y = coverage, geom = "line")
qplot(x = pvals, y = coverage, aes = ("line"))
args(qplot)
qplot(pvals, coverage)
setwd("~/Desktop/repro_research")
head(rawdata)
list.files()
if(~file.exists("./data"))
{dir.creat("./data")}
setwd(~peerassessment_1_files)
setwd("~/peerassessment_1_files"")
)
""
setwd("~/peerassessment_1_files")
setwd("/peerassessment_1_files")
setwd("./peerassessment_1_files")
source('~/Desktop/get_clean_data/peerassessment_1.R')
source('~/Desktop/get_clean_data/peerassessment_1.R')
source('~/Desktop/get_clean_data/peerassessment_1.R')
source('~/Desktop/get_clean_data/peerassessment_1.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
getwd()
setwd("~/Desktop/repro_research")
source('~/Desktop/get_clean_data/peerassessment_1.R')
head(rawdata)
nrow(rawdata)
head(rawdata, 14)
data_interval <- rawdata
data_interval$time <- paste("00",data_interval$interval)
head(data_interval, 15)
data_interval$time <- paste("00",data_interval$interval, sep = "")
head(data_interval, 15)
data_interval$time <- paste("000",data_interval$interval, sep = "")
data_interval$time <- left(data_interval$time,4)
data_interval$time <- substr(data_interval$time,4)
data_interval$time <- substr(data_interval$time,-4,)
data_interval$time <- substr(data_interval$time,-4,0)
head(data_interval, 15)
data_interval$time <- paste("000",data_interval$interval, sep = "")
head(data_interval, 15)
data_interval$time <- substr(data_interval$time, -4,-0)
head(data_interval, 15)
data_interval$time <- substr(data_interval$time, -4,-1)
head(data_interval, 15)
data_interval$time <- paste("000",data_interval$interval, sep = "")
head(data_interval, 15)
data_interval$time <- substr(data_interval$time, -4,-1)
head(data_interval, 15)
data_interval$time <- paste("000",data_interval$interval, sep = "")
head(data_interval, 15)
data_interval$time4 <- substr(data_interval$time, -4,)
data_interval$time4 <- substr(data_interval$time, -4,-1)
head(data_interval, 15)
data_interval$time4 <- substr(data_interval$time, -4,-5)
data_interval$time4 <- substr(data_interval$time, -4,8)
head(data_interval, 15)
data_interval$time4 <- substr(data_interval$time, -4,8)
head(data_interval, 15)
data_interval$time4 <- substring(data_interval$time, -4)
head(data_interval, 15)
data_interval$time4 <- as.PosixCt("%H%M")
data_interval$time4 <- as.PosixLt(data_interval$time4, "%H%M")
data_interval$time4 <- as.POSIXct(data_interval$time4, "%H%M")
head(data_interval)
data_interval$time4 <- as.POSIXct(data_interval$time4)
class(interval)
class(data_interval$interval)
data_interval$interval <- as.factor(data_interval$interval)
class(data_interval$interval)
str(data_interval)
data_interval_nona <- read.csv("./zipdir/activity.csv", header = TRUE, stringsAsFactors = FALSE, na.rm = TRUE)
hist(sum(data_interval$steps, by = data_interval$date))
class(data_interval$date)
date_data <- rawdata
date_data$date <- as.date(date_data$date, "%y-%M-%D")
date_data <- rawdata
date_data$date <- as.POSIXct(date_data$date, "%y-%M-%D")
date_data <- rawdata
date_data$date <- as.POSIXlt(date_data$date, "%y-%M-%D")
head(date_data)
class(date_data$date)
date_data <- rawdata
date_data$date <- as.POSIXt(date_data$date, "%y-%M-%D")
date_data <- rawdata
date_data$date <- as.POSIXct(date_data$date, "%y-%M-%D")
warnings()
suppress_warnings()
date_data_by_day <- split(date_data, date_data$date)
str(date_data_by_day)
warnings()
date_data_by_day <- split(date_data, date_data$date, mean)
date_data_by_day
mean(date_data_by_day$steps)
mean(date_data_by_day$steps, na.rm = TRUE)
class(date_data_by_day$steps)
date_data_by_day
mean(rawdata$steps, na.rm = TRUE)
suppressWarnings(date_data_by_day <- sapply(date_data, date_data$date, mean, na.rm = TRUE)
)
meanstuff <- sapply(date_data, date_data$date, mean, na.rm = TRUE)
?sapply
args(sapply)
date_by_day <- split(date_data, date_data$date)
meanstuff <- sapply(date_by_day, mean, na.rm = TRUE)
meanstuff
complete_date_by_day <- complete.cases(date_by_day)
complete_data <- complete.cases(date_data)
use <- date_data[[complete_data == TRUE]]
use <- date_data[complete_data == TRUE]
cuse <- date_data[complete_data,]
head(cuse)
complete_data <- complete.cases(date_data)
suppressWarnings(use <- date_data[complete_data,])
suppressWarnings(date_by_day <- split(use, use$date))
means <- sapply(date_by_day, mean)
means
head(use,15)
date_data$date <- as.date(date_data$date, "%y-%M-%D", tz = tz)
date_data$date <- as.POSIXct(date_data$date, "%y-%M-%D", tz = tz)
head(date_data)
date_data$date <- as.POSIXlt(date_data$date, "%y-%M-%D", tz = tz)
date_data$date <- as.POSIXlt(date_data$date, "%y-%M-%D")
args(as.POSIXlt)
date_data$date <- as.POSIXlt(date_data$date, format = "%y-%M-%D")
head(date_data)
class(date_data$date)
rawdata <- read.csv("./zipdir/activity.csv", header = TRUE, stringsAsFactors = FALSE)
date_data <- rawdata
date_data$date <- as.POSIXlt(date_data$date, format = "%y-%M-%D")
complete_data <- complete.cases(date_data)
use <- date_data[complete_data,]
complete_data <- complete.cases(date_data)
complete_data
rawdata <- read.csv("./zipdir/activity.csv", header = TRUE, stringsAsFactors = FALSE)
no_na <- read.csv("./zipdir/activity.csv", header = TRUE, stringsAsFactors = FALSE, na.rm = TRUE)
raw_dates <- rawdata
raw_dates$date <- as.POSIXlt(raw_dates$date, format = "%y-%M-%D")
complete_dates$date <- as.POSIXlt(no_na$date, format = "%y-%M-%D)
)
rawdata <- read.csv("./zipdir/activity.csv", header = TRUE, stringsAsFactors = FALSE)
raw_dates <- rawdata
raw_dates$date <- as.POSIXlt(raw_dates$date, format = "%y-%M-%D")
rawdata <- read.csv("./zipdir/activity.csv", header = TRUE, stringsAsFactors = FALSE)
raw_dates <- rawdata
raw_dates$date <- as.POSIXlt(raw_dates$date, format = "%y-%M-%D")
str(raw_dates)
raw_int <- raw_dates
raw_int$interval <- as.factor(raw_int$interval)
str(raw_int)
raw_dates <- rawdata
raw_dates$date <- as.POSIXct(raw_dates$date, format = "%y-%M-%D")
raw_int <- raw_dates
raw_int$interval <- as.factor(raw_int$interval)
str(raw_int)
head(row_int)
head(raw_int)
raw_dates <- rawdata
class(raw_dates$date)
raw_dates$date <- as.POSIXlt(raw_dates$date, format ="%y-%M-%D")
class(raw_dates$date)
str(raw_dates)
raw_dates <- rawdata
args(as.POSIXlt)
?as.POSIXlt
date_only <- raw_dates$date
head(date_only)
date_posix <- as.POSIXlt(date_only, format = "%y-%M-%D")
head(date_posix)
date_posix <- as.POSIXlt(date_only, format = "%y-%m-%d")
head(date_posix)
head(date_only)
date_posix <- as.POSIXct((striptime(date_only, "%Y-%m-%d"))
)
date_posix <- as.POSIXct((strptime(date_only, "%Y-%m-%d")))
head(date_posix)
raw_dates <- rawdata
raw_dates$date <- as.POSIXct(strptime(raw_dates$date, "%Y-%m-%d"))
raw_int <- raw_dates
raw_int$interval <- as.factor(raw_int$interval)
str(raw_int)
raw_complete <- complete.cases(raw_int)
use_fit <- raw_int[raw_complete,]
nrow(raw_complete)
nrow(raw_int)
nrow(use_fit)
use_fit_by_day <- split(use_fit, use_fit$date)
str(use_fit_by_day)
use_fit_means <- sapply(use_fit_by_day, mean)
?lapply
use_fit_means <- lapply(use_fit_by_day, mean)
use_fit_means <- lapply(use_fit_by_day$steps, mean)
use_fit_means
use_fit_means <- sapply(use_fit_by_day$steps, mean)
use_fit_means
mean_use_fit_by_day <- mean(use_fit_by_day$steps)
str(use_fit_by_day)
int_check <- c(1:6)
as.integer(int_check)
mean(int_check)
means <- aggregate(use_fit, by = use_fit$date, mean)
use_fit <- raw_int[raw_complete,]
good_dates <- use_fit$date
class(good_dates)
good_dates
str(good_dates)
as_list_good_dates <- as.list(good_dates)
str(good_dates)
nrow(use_fit)
nrow(use_fit$date)
length(use_fit$date)
aggregate(use_fit, use_fit$date, mean)
aggregate(use_fit, by = use_fit$date , mean)
aggregate(use_fit$steps, by = use_fit$date, mean)
aggregate(use_fit$steps, by = list(use_fit$date), mean)
means_complete <- aggregate(use_fit$steps, by = list(use_fit$date), mean)
hist(means_complete)
str(means_complete)
str(means_complete$x)
hist(means_complete$x)
mean_total <- mean(use_fit$steps)
mean_total <- mean(use_fit$steps)
median_total <- median(use_fit$steps)
mean_total
median_total
mean_total <- mean(means_complete$x)
mean_total
median_complete <- aggregate(use_fit$steps, by = list(use_fit$date), median)
median_complete <- median(median_complete$x)
median_complete
median_complete <- median(means_complete$x)
median_complete
url <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip"
download.file(url, destfile = "activity.zip", method = "curl")
dir.create("./zipdir")
unzip("activity.zip", exdir = "./zipdir")
files <- list.files("./zipdir")
rawdata <- read.csv("./zipdir/activity.csv", header = TRUE, stringsAsFactors = FALSE)
raw_dates <- rawdata
raw_dates$date <- as.POSIXct(strptime(raw_dates$date, "%Y-%m-%d"))
raw_int <- raw_dates
raw_int$interval <- as.factor(raw_int$interval)
raw_complete <- complete.cases(raw_int)
use_fit <- raw_int[raw_complete,]
means_complete <- aggregate(use_fit$steps, by = list(use_fit$date), mean)
hist(means_complete$x, main = "Average Steps by Day", xlab = "Mean steps by day")
mean_total <- round(mean(means_complete$x),2)
median_complete <- round(median(means_complete$x),2)
mean_total
median_complete
daily_activity <- aggregate(use_fit$steps, by = list(use_fit$interval), mean)
plot(daily_activity$x, daily_activity$interval, type = "l")
daily_activity <- aggregate(steps ~ interval, data = use_fit, mean)
plot(daily_activity$steps, daily_activity$interval, type = "l")
daily_activity <- aggregate(steps ~ interval, data = use_fit, mean)
plot(daily_activity$interval, daily_activity$steps, type = "l")
daily_activity <- aggregate(use_fit$steps, by = list(use_fit$interval), mean)
plot(daily_activity$x, daily_activity$interval, type = "l")
plot(daily_activity$x, daily_activity$interval, type = "l", ylab = "Average Steps", xlab = "5min interval index from midnight to 11:55pm")
maxid <- which.max(daily_activity$x)
maxinterval <- daily_activity$interval[maxid]
maxinterval
maxid
104*5
520/60
520/60
maxtime <- maxid*5/60
maxtime
missing <- sum(is.na(raw_int$steps))
missing
maxid <- which.max(daily_activity$x)
maxtime_hour <- maxid*5 %/% 60
maxtime_minute <- [maxid*5 %% 60] *60
maxtime_minute <- (maxid*5 %% 60) *60
maxtime_hour
maxid <- which.max(daily_activity$x)
maxid
maxtime_hour <- maxid*5 %/% 60
maxtime_hour
maxtime <- maxid*5
maxtime_hour <- maxtime %/% 60
maxtime_hour
maxtime_percentage <- maxtime %% 60
maxtime_minute <- maxtime_percentage *60
maxtime_minute
maxtime
520-8*60
maxtime_minute <- maxtime - maxtime_hour*60
maxtime_minute
fit_filled_in <- data.frame(raw_int)
str(fit_filled_in)
fit_filled_in[is.na(fit_filled_in$steps)] <- daily_activity$x
use_fit$weekday <- weekdays(use_fit$date)
str(use_fit)
use_fit$weekday_factor <- ifelse(use_fit$weekday %in% c("Saturday", "Sunday"), "Weekend", "Weekday")
str(use_fit)
use_fit$weekday_factor <- as.factor(use_fit$weekday_factor)
steps_by_interval2 <- aggregate(steps ~ interval, data = use_fit, mean)
steps_by_interval <- aggregate(steps ~ interval, data = use_fit, mean)
use_fit$avg_by_interval <- rep(steps_by_interval$steps, 61)
str(steps_by_interval)
library(ggplot2)
qplot(x = interval, y = steps_by_interval, data = steps_by_interval, geom = "line", facets = weekday_factor ~ .)
str)steps_by_interval
str(use_fit)
15264/288
raw_int$weekday <- weekdays(raw_int$date)
raw_int$weekday_factor <- ifelse(raw_int$weekday %in% c("Saturday", "Sunday"), "Weekend", "Weekday")
raw_int$weekday_factor <- as.factor(use_fit$weekday_factor)
steps_by_interval <- aggregate(steps ~ interval, data = raw_int, mean)
raw_int$avg_by_interval <- rep(steps_by_interval$steps, 61)
raw_int$weekday_factor <- as.factor(raw_int$weekday_factor)
raw_int$weekday_factor <- as.factor(raw_int$weekday_factor)
steps_by_interval <- aggregate(steps ~ interval, data = raw_int, mean)
raw_int$avg_by_interval <- rep(steps_by_interval$steps, 61)
library(ggplot2)
qplot(x = interval, y = steps_by_interval,
data = steps_by_interval, geom = "line", facets = weekday_factor ~ .)
str(steps_by_interval)
str(raw_int)
library(ggplot2)
qplot(x = interval, y = avg_by_interval,
data = raw_int, geom = "line", facets = weekday_factor ~ .)
steps_by_interval <- aggregate(steps ~ interval ~ weekday_factor, data = raw_int, mean)
if(is.na(raw_int$steps) {raw_int$steps <- raw_int$avg_by_interval})
if(is.na(raw_int$steps), raw_int$steps <- raw_int$avg_by_interval)
ifelse(is.na(raw_int$steps), raw_int$steps <- raw_int$avg_by_interval)
ifelse(is.na(raw_int$steps), raw_int$steps <- raw_int$avg_by_interval, raw_int$steps)
raw_int <- raw_dates
raw_int$interval <- as.factor(raw_int$interval)
raw_int$weekday <- weekdays(raw_int$date)
raw_int$weekday_factor <- ifelse(raw_int$weekday %in% c("Saturday", "Sunday"), "Weekend", "Weekday")
raw_int$weekday_factor <- as.factor(raw_int$weekday_factor)
steps_by_interval <- aggregate(steps ~ interval, data = raw_int, mean)
raw_int$avg_by_interval <- rep(steps_by_interval$steps, 61)
raw_int$steps_filled_in <- ifelse(is.na(raw_int$steps), raw_int$steps <- raw_int$avg_by_interval, raw_int$steps)
str(raw_int)
rawdata <- read.csv("./zipdir/activity.csv", header = TRUE, stringsAsFactors = FALSE)
raw_dates <- rawdata
raw_dates$date <- as.POSIXct(strptime(raw_dates$date, "%Y-%m-%d"))
raw_int <- raw_dates
raw_int$interval <- as.factor(raw_int$interval)
str(raw_int)
raw_int$weekday <- weekdays(raw_int$date)
raw_int$weekday_factor <- ifelse(raw_int$weekday %in% c("Saturday", "Sunday"), "Weekend", "Weekday")
raw_int$weekday_factor <- as.factor(raw_int$weekday_factor)
steps_by_interval <- aggregate(steps ~ interval, data = raw_int, mean)
raw_int$avg_by_interval <- rep(steps_by_interval$steps, 61)
str(raw_int)
raw_int$steps_filled_in <- ifelse(is.na(raw_int$steps), raw_int$steps <- raw_int$avg_by_interval, raw_int$steps)
str(raw_int)
raw_int <- raw_dates
raw_int$interval <- as.factor(raw_int$interval)
raw_int$weekday <- weekdays(raw_int$date)
raw_int$weekday_factor <- ifelse(raw_int$weekday %in% c("Saturday", "Sunday"), "Weekend", "Weekday")
raw_int$weekday_factor <- as.factor(raw_int$weekday_factor)
steps_by_interval <- aggregate(steps ~ interval, data = raw_int, mean)
raw_int$avg_by_interval <- rep(steps_by_interval$steps, 61)
raw_int$steps_filled_in <- ifelse(is.na(raw_int$steps), raw_int$steps_filled_in <- raw_int$avg_by_interval, raw_int$steps_filled_in <- raw_int$steps)
library(ggplot2)
qplot(x = interval, y = steps_filled_in,
data = raw_int, geom = "line", facets = weekday_factor ~ .)
str(raw_int)
library(ggplot2)
qplot(x = interval, y = steps_filled_in,
data = raw_int, geom = "line", facets = weekday_factor ~ .)
means_complete$x
mean(means_complete$x)
median(means_complete$x)
steps_by_interval <- aggregate(steps ~ interval, data = raw_int, mean)
raw_int$avg_by_interval <- rep(steps_by_interval$steps, 61)
#61 is the number of days; or the number of times each of the intervals repeats
raw_int$steps_filled_in <- ifelse(is.na(raw_int$steps), raw_int$steps_filled_in <- raw_int$avg_by_interval, raw_int$steps_filled_in <- raw_int$steps)
means_filled_in <- aggregate(raw_int$steps_filled_in, by = list(raw_int$date), mean)
hist(means_filled_in$x, main = "Average Steps by Day", xlab = "Mean steps by day")
mean_filled_in <- mean(means_filled_in$x)
mean_filled_in
median_filled_in <- round(median(means_filled_in$x),2)
median_filled_in <- median(means_filled_in$x)
median_filled_in
qplot(x = interval, y = steps_filled_in, data = raw_int, geom = "line", facets = weekday_factor ~ ., ylab = "Steps", xlab = "Interval (in 5 min chunks from 12:00am to 11:55pm)")
